import re

SMIL_URL = 'http://pokerstars.api.videojuicer.com/presentations/%s.smil'

####################################################################################################
def NormalizeURL(url):
  return url

####################################################################################################
def MetadataObjectForURL(url):
  data = HTML.ElementFromURL(url, cacheTime=7200, errors='ignore')
  
  
  clip_title = data.xpath('//div[@class="left clearfix"]/h1')[0].text
  #Log(clip_title)
  
  clip_summary = data.xpath('//div[@class="left clearfix"]/p')[0].text
  #Log(clip_summary)
  
  thumbUrl = data.xpath('//div[@id="player_lrg"]/img')[0].get('src')
  #Log(thumbUrl)
  
  video_id = re.search('videojuicer.com/pokerstars/presentations/(.*?).jpg', thumbUrl).group(1)
  #Log(video_id)
  smil = HTML.ElementFromURL(SMIL_URL % video_id, cacheTime=7200, errors='ignore')
  duration = int(smil.xpath('//video')[0].get('dur').strip('ms'))
  #Log(duration)
  
  # Construct a metadata item
  vc = VideoClipObject(
    title = clip_title,
    duration = duration,
    summary = clip_summary,
    thumb = thumbUrl
  )
  
  return vc
  
####################################################################################################
def MediaObjectsForURL(url):

  return [
    MediaObject(
      parts = [PartObject(key=Callback(PlayVideo, url=url))],
      container = Container.MP4,
      video_resolution = '360',
      #aspect_ratio = '1.78',
      bitrate = '868',
      video_codec = VideoCodec.H264,
      audio_codec = AudioCodec.MP3
    )
  ]

####################################################################################################
def PlayVideo(url):
  data = HTML.ElementFromURL(url, cacheTime=7200, errors='ignore')
  
  thumb_url = data.xpath('//div[@id="player_lrg"]/img')[0].get('src')
  #Log(thumb_url)
  video_id = re.search('videojuicer.com/pokerstars/presentations/(.*?).jpg', thumb_url).group(1)
  #Log(video_id)
  smil = HTML.ElementFromURL(SMIL_URL % video_id, cacheTime=7200, errors='ignore')
  video_url = smil.xpath('//video')[0].get('src')
  
  #Log(video_url)
  
  return Redirect(video_url)
